continue
  @user.building_id
continue
resource
@user
continue
 errors
errors.add(:building_access)
 errors
continue
 errors
return false
building_id
building_access
continue
building_access
first_name
building_id
exit
self
 building_id
continue
response.status = 404
response.status
JSON.parse(response.status)
JSON.parse(response.body)
continue
JSON.parse(response.body)
continue
response.body = parsed_body.to_json
parsed_body
parsed_body["errors"]["building_acces"] = ["Le mot de passe n'est pas valide"] 
paresed_body["errors"]["building_acces"] = ["Le mot de passe n'est pas valide"] 
parsed_body = JSON.parse(response.body)
paresed_body["errors"]["building_acces"] = ["Le mot de passe n'est pas valide"] parsed_body = JSON.parse(response.body)
parsed_body = JSON.parse(response.body)
continue
building_name
exit
continue
error
continueddadadaddddad
continue
@user.errors.messages[:building_acces] = ["Le mot de passe est invalide"]
continue
@user.errors.messages
@user.errors.messages[:building_acces] = ["Le mot de passe est invalide"]
user.errors.messages[:building_acces] = ["Le mot de passe est invalide"]
@user.errors.messages
@user.errors.messages[:building_acces]@user.errors.messages[:building_acces]d@user.errors.messages[:building_acces]ddddda
     continue
continue
stored_location_for(resource) 
 request.env['omniauth.origin']
 request.env['omniauth.origin'] || stored_location_for(resource) || root_path
exit
session[:previous_url]
exit
Notifier.new_user(current_user)
exit
Notifier.new_user(current_user)
current_user
Notifier.new_user
Notifier
Notfier
Notier
exit
Notifier
exit
Notifier
Notifier.new_user(current_user)
